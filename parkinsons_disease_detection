{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9015123,"sourceType":"datasetVersion","datasetId":5432011}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/nancymee/parkinson-s-disease-detection?scriptVersionId=189407324\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"### Medical Diagnosis and Classification Using Machine Learning\n\nBuild a predictive model for the early detection of Parkinson's disease by analyzing a combination of clinical data, neuroimaging results and patient demographics","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19"}},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\n\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split, RandomizedSearchCV\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.svm import SVC\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, confusion_matrix\n","metadata":{"execution":{"iopub.status.busy":"2024-07-23T06:45:03.054509Z","iopub.execute_input":"2024-07-23T06:45:03.055156Z","iopub.status.idle":"2024-07-23T06:45:04.724036Z","shell.execute_reply.started":"2024-07-23T06:45:03.055094Z","shell.execute_reply":"2024-07-23T06:45:04.722696Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"code","source":"data = pd.read_csv('/kaggle/input/parkinsons-disease-detection/Day14_Parkinsons_Disease_Data.csv')\ndata","metadata":{"execution":{"iopub.status.busy":"2024-07-23T06:47:34.382024Z","iopub.execute_input":"2024-07-23T06:47:34.383409Z","iopub.status.idle":"2024-07-23T06:47:34.47092Z","shell.execute_reply.started":"2024-07-23T06:47:34.383353Z","shell.execute_reply":"2024-07-23T06:47:34.469481Z"},"trusted":true},"execution_count":2,"outputs":[{"execution_count":2,"output_type":"execute_result","data":{"text/plain":"               name  MDVP:Fo(Hz)  MDVP:Fhi(Hz)  MDVP:Flo(Hz)  MDVP:Jitter(%)  \\\n0    phon_R01_S01_1      119.992       157.302        74.997         0.00784   \n1    phon_R01_S01_2      122.400       148.650       113.819         0.00968   \n2    phon_R01_S01_3      116.682       131.111       111.555         0.01050   \n3    phon_R01_S01_4      116.676       137.871       111.366         0.00997   \n4    phon_R01_S01_5      116.014       141.781       110.655         0.01284   \n..              ...          ...           ...           ...             ...   \n190  phon_R01_S50_2      174.188       230.978        94.261         0.00459   \n191  phon_R01_S50_3      209.516       253.017        89.488         0.00564   \n192  phon_R01_S50_4      174.688       240.005        74.287         0.01360   \n193  phon_R01_S50_5      198.764       396.961        74.904         0.00740   \n194  phon_R01_S50_6      214.289       260.277        77.973         0.00567   \n\n     MDVP:Jitter(Abs)  MDVP:RAP  MDVP:PPQ  Jitter:DDP  MDVP:Shimmer  ...  \\\n0             0.00007   0.00370   0.00554     0.01109       0.04374  ...   \n1             0.00008   0.00465   0.00696     0.01394       0.06134  ...   \n2             0.00009   0.00544   0.00781     0.01633       0.05233  ...   \n3             0.00009   0.00502   0.00698     0.01505       0.05492  ...   \n4             0.00011   0.00655   0.00908     0.01966       0.06425  ...   \n..                ...       ...       ...         ...           ...  ...   \n190           0.00003   0.00263   0.00259     0.00790       0.04087  ...   \n191           0.00003   0.00331   0.00292     0.00994       0.02751  ...   \n192           0.00008   0.00624   0.00564     0.01873       0.02308  ...   \n193           0.00004   0.00370   0.00390     0.01109       0.02296  ...   \n194           0.00003   0.00295   0.00317     0.00885       0.01884  ...   \n\n     Shimmer:DDA      NHR     HNR  status      RPDE       DFA   spread1  \\\n0        0.06545  0.02211  21.033       1  0.414783  0.815285 -4.813031   \n1        0.09403  0.01929  19.085       1  0.458359  0.819521 -4.075192   \n2        0.08270  0.01309  20.651       1  0.429895  0.825288 -4.443179   \n3        0.08771  0.01353  20.644       1  0.434969  0.819235 -4.117501   \n4        0.10470  0.01767  19.649       1  0.417356  0.823484 -3.747787   \n..           ...      ...     ...     ...       ...       ...       ...   \n190      0.07008  0.02764  19.517       0  0.448439  0.657899 -6.538586   \n191      0.04812  0.01810  19.147       0  0.431674  0.683244 -6.195325   \n192      0.03804  0.10715  17.883       0  0.407567  0.655683 -6.787197   \n193      0.03794  0.07223  19.020       0  0.451221  0.643956 -6.744577   \n194      0.03078  0.04398  21.209       0  0.462803  0.664357 -5.724056   \n\n      spread2        D2       PPE  \n0    0.266482  2.301442  0.284654  \n1    0.335590  2.486855  0.368674  \n2    0.311173  2.342259  0.332634  \n3    0.334147  2.405554  0.368975  \n4    0.234513  2.332180  0.410335  \n..        ...       ...       ...  \n190  0.121952  2.657476  0.133050  \n191  0.129303  2.784312  0.168895  \n192  0.158453  2.679772  0.131728  \n193  0.207454  2.138608  0.123306  \n194  0.190667  2.555477  0.148569  \n\n[195 rows x 24 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>name</th>\n      <th>MDVP:Fo(Hz)</th>\n      <th>MDVP:Fhi(Hz)</th>\n      <th>MDVP:Flo(Hz)</th>\n      <th>MDVP:Jitter(%)</th>\n      <th>MDVP:Jitter(Abs)</th>\n      <th>MDVP:RAP</th>\n      <th>MDVP:PPQ</th>\n      <th>Jitter:DDP</th>\n      <th>MDVP:Shimmer</th>\n      <th>...</th>\n      <th>Shimmer:DDA</th>\n      <th>NHR</th>\n      <th>HNR</th>\n      <th>status</th>\n      <th>RPDE</th>\n      <th>DFA</th>\n      <th>spread1</th>\n      <th>spread2</th>\n      <th>D2</th>\n      <th>PPE</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>phon_R01_S01_1</td>\n      <td>119.992</td>\n      <td>157.302</td>\n      <td>74.997</td>\n      <td>0.00784</td>\n      <td>0.00007</td>\n      <td>0.00370</td>\n      <td>0.00554</td>\n      <td>0.01109</td>\n      <td>0.04374</td>\n      <td>...</td>\n      <td>0.06545</td>\n      <td>0.02211</td>\n      <td>21.033</td>\n      <td>1</td>\n      <td>0.414783</td>\n      <td>0.815285</td>\n      <td>-4.813031</td>\n      <td>0.266482</td>\n      <td>2.301442</td>\n      <td>0.284654</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>phon_R01_S01_2</td>\n      <td>122.400</td>\n      <td>148.650</td>\n      <td>113.819</td>\n      <td>0.00968</td>\n      <td>0.00008</td>\n      <td>0.00465</td>\n      <td>0.00696</td>\n      <td>0.01394</td>\n      <td>0.06134</td>\n      <td>...</td>\n      <td>0.09403</td>\n      <td>0.01929</td>\n      <td>19.085</td>\n      <td>1</td>\n      <td>0.458359</td>\n      <td>0.819521</td>\n      <td>-4.075192</td>\n      <td>0.335590</td>\n      <td>2.486855</td>\n      <td>0.368674</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>phon_R01_S01_3</td>\n      <td>116.682</td>\n      <td>131.111</td>\n      <td>111.555</td>\n      <td>0.01050</td>\n      <td>0.00009</td>\n      <td>0.00544</td>\n      <td>0.00781</td>\n      <td>0.01633</td>\n      <td>0.05233</td>\n      <td>...</td>\n      <td>0.08270</td>\n      <td>0.01309</td>\n      <td>20.651</td>\n      <td>1</td>\n      <td>0.429895</td>\n      <td>0.825288</td>\n      <td>-4.443179</td>\n      <td>0.311173</td>\n      <td>2.342259</td>\n      <td>0.332634</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>phon_R01_S01_4</td>\n      <td>116.676</td>\n      <td>137.871</td>\n      <td>111.366</td>\n      <td>0.00997</td>\n      <td>0.00009</td>\n      <td>0.00502</td>\n      <td>0.00698</td>\n      <td>0.01505</td>\n      <td>0.05492</td>\n      <td>...</td>\n      <td>0.08771</td>\n      <td>0.01353</td>\n      <td>20.644</td>\n      <td>1</td>\n      <td>0.434969</td>\n      <td>0.819235</td>\n      <td>-4.117501</td>\n      <td>0.334147</td>\n      <td>2.405554</td>\n      <td>0.368975</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>phon_R01_S01_5</td>\n      <td>116.014</td>\n      <td>141.781</td>\n      <td>110.655</td>\n      <td>0.01284</td>\n      <td>0.00011</td>\n      <td>0.00655</td>\n      <td>0.00908</td>\n      <td>0.01966</td>\n      <td>0.06425</td>\n      <td>...</td>\n      <td>0.10470</td>\n      <td>0.01767</td>\n      <td>19.649</td>\n      <td>1</td>\n      <td>0.417356</td>\n      <td>0.823484</td>\n      <td>-3.747787</td>\n      <td>0.234513</td>\n      <td>2.332180</td>\n      <td>0.410335</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>190</th>\n      <td>phon_R01_S50_2</td>\n      <td>174.188</td>\n      <td>230.978</td>\n      <td>94.261</td>\n      <td>0.00459</td>\n      <td>0.00003</td>\n      <td>0.00263</td>\n      <td>0.00259</td>\n      <td>0.00790</td>\n      <td>0.04087</td>\n      <td>...</td>\n      <td>0.07008</td>\n      <td>0.02764</td>\n      <td>19.517</td>\n      <td>0</td>\n      <td>0.448439</td>\n      <td>0.657899</td>\n      <td>-6.538586</td>\n      <td>0.121952</td>\n      <td>2.657476</td>\n      <td>0.133050</td>\n    </tr>\n    <tr>\n      <th>191</th>\n      <td>phon_R01_S50_3</td>\n      <td>209.516</td>\n      <td>253.017</td>\n      <td>89.488</td>\n      <td>0.00564</td>\n      <td>0.00003</td>\n      <td>0.00331</td>\n      <td>0.00292</td>\n      <td>0.00994</td>\n      <td>0.02751</td>\n      <td>...</td>\n      <td>0.04812</td>\n      <td>0.01810</td>\n      <td>19.147</td>\n      <td>0</td>\n      <td>0.431674</td>\n      <td>0.683244</td>\n      <td>-6.195325</td>\n      <td>0.129303</td>\n      <td>2.784312</td>\n      <td>0.168895</td>\n    </tr>\n    <tr>\n      <th>192</th>\n      <td>phon_R01_S50_4</td>\n      <td>174.688</td>\n      <td>240.005</td>\n      <td>74.287</td>\n      <td>0.01360</td>\n      <td>0.00008</td>\n      <td>0.00624</td>\n      <td>0.00564</td>\n      <td>0.01873</td>\n      <td>0.02308</td>\n      <td>...</td>\n      <td>0.03804</td>\n      <td>0.10715</td>\n      <td>17.883</td>\n      <td>0</td>\n      <td>0.407567</td>\n      <td>0.655683</td>\n      <td>-6.787197</td>\n      <td>0.158453</td>\n      <td>2.679772</td>\n      <td>0.131728</td>\n    </tr>\n    <tr>\n      <th>193</th>\n      <td>phon_R01_S50_5</td>\n      <td>198.764</td>\n      <td>396.961</td>\n      <td>74.904</td>\n      <td>0.00740</td>\n      <td>0.00004</td>\n      <td>0.00370</td>\n      <td>0.00390</td>\n      <td>0.01109</td>\n      <td>0.02296</td>\n      <td>...</td>\n      <td>0.03794</td>\n      <td>0.07223</td>\n      <td>19.020</td>\n      <td>0</td>\n      <td>0.451221</td>\n      <td>0.643956</td>\n      <td>-6.744577</td>\n      <td>0.207454</td>\n      <td>2.138608</td>\n      <td>0.123306</td>\n    </tr>\n    <tr>\n      <th>194</th>\n      <td>phon_R01_S50_6</td>\n      <td>214.289</td>\n      <td>260.277</td>\n      <td>77.973</td>\n      <td>0.00567</td>\n      <td>0.00003</td>\n      <td>0.00295</td>\n      <td>0.00317</td>\n      <td>0.00885</td>\n      <td>0.01884</td>\n      <td>...</td>\n      <td>0.03078</td>\n      <td>0.04398</td>\n      <td>21.209</td>\n      <td>0</td>\n      <td>0.462803</td>\n      <td>0.664357</td>\n      <td>-5.724056</td>\n      <td>0.190667</td>\n      <td>2.555477</td>\n      <td>0.148569</td>\n    </tr>\n  </tbody>\n</table>\n<p>195 rows × 24 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"data.shape","metadata":{"execution":{"iopub.status.busy":"2024-07-23T06:48:04.067781Z","iopub.execute_input":"2024-07-23T06:48:04.068231Z","iopub.status.idle":"2024-07-23T06:48:04.078223Z","shell.execute_reply.started":"2024-07-23T06:48:04.068196Z","shell.execute_reply":"2024-07-23T06:48:04.076425Z"},"trusted":true},"execution_count":3,"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"(195, 24)"},"metadata":{}}]},{"cell_type":"code","source":"data.info()","metadata":{"execution":{"iopub.status.busy":"2024-07-23T06:48:09.715933Z","iopub.execute_input":"2024-07-23T06:48:09.716457Z","iopub.status.idle":"2024-07-23T06:48:09.746312Z","shell.execute_reply.started":"2024-07-23T06:48:09.716412Z","shell.execute_reply":"2024-07-23T06:48:09.744831Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 195 entries, 0 to 194\nData columns (total 24 columns):\n #   Column            Non-Null Count  Dtype  \n---  ------            --------------  -----  \n 0   name              195 non-null    object \n 1   MDVP:Fo(Hz)       195 non-null    float64\n 2   MDVP:Fhi(Hz)      195 non-null    float64\n 3   MDVP:Flo(Hz)      195 non-null    float64\n 4   MDVP:Jitter(%)    195 non-null    float64\n 5   MDVP:Jitter(Abs)  195 non-null    float64\n 6   MDVP:RAP          195 non-null    float64\n 7   MDVP:PPQ          195 non-null    float64\n 8   Jitter:DDP        195 non-null    float64\n 9   MDVP:Shimmer      195 non-null    float64\n 10  MDVP:Shimmer(dB)  195 non-null    float64\n 11  Shimmer:APQ3      195 non-null    float64\n 12  Shimmer:APQ5      195 non-null    float64\n 13  MDVP:APQ          195 non-null    float64\n 14  Shimmer:DDA       195 non-null    float64\n 15  NHR               195 non-null    float64\n 16  HNR               195 non-null    float64\n 17  status            195 non-null    int64  \n 18  RPDE              195 non-null    float64\n 19  DFA               195 non-null    float64\n 20  spread1           195 non-null    float64\n 21  spread2           195 non-null    float64\n 22  D2                195 non-null    float64\n 23  PPE               195 non-null    float64\ndtypes: float64(22), int64(1), object(1)\nmemory usage: 36.7+ KB\n","output_type":"stream"}]},{"cell_type":"markdown","source":"### Numerical and Categorical Features","metadata":{}},{"cell_type":"code","source":"num_feat = [feature for feature in data.columns if data[feature].dtype != 'O']\ncat_feat = [feature for feature in data.columns if data[feature].dtype == 'O']\nnum_feat","metadata":{"execution":{"iopub.status.busy":"2024-07-23T06:49:17.601528Z","iopub.execute_input":"2024-07-23T06:49:17.60196Z","iopub.status.idle":"2024-07-23T06:49:17.612979Z","shell.execute_reply.started":"2024-07-23T06:49:17.601924Z","shell.execute_reply":"2024-07-23T06:49:17.611707Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"['MDVP:Fo(Hz)',\n 'MDVP:Fhi(Hz)',\n 'MDVP:Flo(Hz)',\n 'MDVP:Jitter(%)',\n 'MDVP:Jitter(Abs)',\n 'MDVP:RAP',\n 'MDVP:PPQ',\n 'Jitter:DDP',\n 'MDVP:Shimmer',\n 'MDVP:Shimmer(dB)',\n 'Shimmer:APQ3',\n 'Shimmer:APQ5',\n 'MDVP:APQ',\n 'Shimmer:DDA',\n 'NHR',\n 'HNR',\n 'status',\n 'RPDE',\n 'DFA',\n 'spread1',\n 'spread2',\n 'D2',\n 'PPE']"},"metadata":{}}]},{"cell_type":"code","source":"cat_feat","metadata":{"execution":{"iopub.status.busy":"2024-07-23T06:49:26.324114Z","iopub.execute_input":"2024-07-23T06:49:26.324605Z","iopub.status.idle":"2024-07-23T06:49:26.333589Z","shell.execute_reply.started":"2024-07-23T06:49:26.324566Z","shell.execute_reply":"2024-07-23T06:49:26.331944Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"['name']"},"metadata":{}}]},{"cell_type":"markdown","source":"#### Missing data","metadata":{}},{"cell_type":"code","source":"total= data.isnull().sum().sort_values(ascending=False)\npercent=(data.isnull().sum()/data.isnull().count()*100).sort_values(ascending=False)\npd.concat([total, percent], axis=1, keys=['Total', 'Percent'])","metadata":{"execution":{"iopub.status.busy":"2024-07-23T06:50:24.664538Z","iopub.execute_input":"2024-07-23T06:50:24.664947Z","iopub.status.idle":"2024-07-23T06:50:24.692289Z","shell.execute_reply.started":"2024-07-23T06:50:24.664917Z","shell.execute_reply":"2024-07-23T06:50:24.690355Z"},"trusted":true},"execution_count":8,"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"                  Total  Percent\nname                  0      0.0\nMDVP:Fo(Hz)           0      0.0\nD2                    0      0.0\nspread2               0      0.0\nspread1               0      0.0\nDFA                   0      0.0\nRPDE                  0      0.0\nstatus                0      0.0\nHNR                   0      0.0\nNHR                   0      0.0\nShimmer:DDA           0      0.0\nMDVP:APQ              0      0.0\nShimmer:APQ5          0      0.0\nShimmer:APQ3          0      0.0\nMDVP:Shimmer(dB)      0      0.0\nMDVP:Shimmer          0      0.0\nJitter:DDP            0      0.0\nMDVP:PPQ              0      0.0\nMDVP:RAP              0      0.0\nMDVP:Jitter(Abs)      0      0.0\nMDVP:Jitter(%)        0      0.0\nMDVP:Flo(Hz)          0      0.0\nMDVP:Fhi(Hz)          0      0.0\nPPE                   0      0.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Total</th>\n      <th>Percent</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>name</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>MDVP:Fo(Hz)</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>D2</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>spread2</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>spread1</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>DFA</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>RPDE</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>status</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>HNR</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>NHR</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Shimmer:DDA</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>MDVP:APQ</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Shimmer:APQ5</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Shimmer:APQ3</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>MDVP:Shimmer(dB)</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>MDVP:Shimmer</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>Jitter:DDP</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>MDVP:PPQ</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>MDVP:RAP</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>MDVP:Jitter(Abs)</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>MDVP:Jitter(%)</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>MDVP:Flo(Hz)</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>MDVP:Fhi(Hz)</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>PPE</th>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## Model Building\n* X = feature matrix (Independent Variables)\n* y = Target variable(Dependent Variable)","metadata":{}},{"cell_type":"code","source":"X = data.drop(columns = ['name', 'status'], axis=1) \ny = data['status']\n\nX","metadata":{"execution":{"iopub.status.busy":"2024-07-23T06:52:14.556376Z","iopub.execute_input":"2024-07-23T06:52:14.557964Z","iopub.status.idle":"2024-07-23T06:52:14.599184Z","shell.execute_reply.started":"2024-07-23T06:52:14.557916Z","shell.execute_reply":"2024-07-23T06:52:14.597748Z"},"trusted":true},"execution_count":12,"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"     MDVP:Fo(Hz)  MDVP:Fhi(Hz)  MDVP:Flo(Hz)  MDVP:Jitter(%)  \\\n0        119.992       157.302        74.997         0.00784   \n1        122.400       148.650       113.819         0.00968   \n2        116.682       131.111       111.555         0.01050   \n3        116.676       137.871       111.366         0.00997   \n4        116.014       141.781       110.655         0.01284   \n..           ...           ...           ...             ...   \n190      174.188       230.978        94.261         0.00459   \n191      209.516       253.017        89.488         0.00564   \n192      174.688       240.005        74.287         0.01360   \n193      198.764       396.961        74.904         0.00740   \n194      214.289       260.277        77.973         0.00567   \n\n     MDVP:Jitter(Abs)  MDVP:RAP  MDVP:PPQ  Jitter:DDP  MDVP:Shimmer  \\\n0             0.00007   0.00370   0.00554     0.01109       0.04374   \n1             0.00008   0.00465   0.00696     0.01394       0.06134   \n2             0.00009   0.00544   0.00781     0.01633       0.05233   \n3             0.00009   0.00502   0.00698     0.01505       0.05492   \n4             0.00011   0.00655   0.00908     0.01966       0.06425   \n..                ...       ...       ...         ...           ...   \n190           0.00003   0.00263   0.00259     0.00790       0.04087   \n191           0.00003   0.00331   0.00292     0.00994       0.02751   \n192           0.00008   0.00624   0.00564     0.01873       0.02308   \n193           0.00004   0.00370   0.00390     0.01109       0.02296   \n194           0.00003   0.00295   0.00317     0.00885       0.01884   \n\n     MDVP:Shimmer(dB)  ...  MDVP:APQ  Shimmer:DDA      NHR     HNR      RPDE  \\\n0               0.426  ...   0.02971      0.06545  0.02211  21.033  0.414783   \n1               0.626  ...   0.04368      0.09403  0.01929  19.085  0.458359   \n2               0.482  ...   0.03590      0.08270  0.01309  20.651  0.429895   \n3               0.517  ...   0.03772      0.08771  0.01353  20.644  0.434969   \n4               0.584  ...   0.04465      0.10470  0.01767  19.649  0.417356   \n..                ...  ...       ...          ...      ...     ...       ...   \n190             0.405  ...   0.02745      0.07008  0.02764  19.517  0.448439   \n191             0.263  ...   0.01879      0.04812  0.01810  19.147  0.431674   \n192             0.256  ...   0.01667      0.03804  0.10715  17.883  0.407567   \n193             0.241  ...   0.01588      0.03794  0.07223  19.020  0.451221   \n194             0.190  ...   0.01373      0.03078  0.04398  21.209  0.462803   \n\n          DFA   spread1   spread2        D2       PPE  \n0    0.815285 -4.813031  0.266482  2.301442  0.284654  \n1    0.819521 -4.075192  0.335590  2.486855  0.368674  \n2    0.825288 -4.443179  0.311173  2.342259  0.332634  \n3    0.819235 -4.117501  0.334147  2.405554  0.368975  \n4    0.823484 -3.747787  0.234513  2.332180  0.410335  \n..        ...       ...       ...       ...       ...  \n190  0.657899 -6.538586  0.121952  2.657476  0.133050  \n191  0.683244 -6.195325  0.129303  2.784312  0.168895  \n192  0.655683 -6.787197  0.158453  2.679772  0.131728  \n193  0.643956 -6.744577  0.207454  2.138608  0.123306  \n194  0.664357 -5.724056  0.190667  2.555477  0.148569  \n\n[195 rows x 22 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>MDVP:Fo(Hz)</th>\n      <th>MDVP:Fhi(Hz)</th>\n      <th>MDVP:Flo(Hz)</th>\n      <th>MDVP:Jitter(%)</th>\n      <th>MDVP:Jitter(Abs)</th>\n      <th>MDVP:RAP</th>\n      <th>MDVP:PPQ</th>\n      <th>Jitter:DDP</th>\n      <th>MDVP:Shimmer</th>\n      <th>MDVP:Shimmer(dB)</th>\n      <th>...</th>\n      <th>MDVP:APQ</th>\n      <th>Shimmer:DDA</th>\n      <th>NHR</th>\n      <th>HNR</th>\n      <th>RPDE</th>\n      <th>DFA</th>\n      <th>spread1</th>\n      <th>spread2</th>\n      <th>D2</th>\n      <th>PPE</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>119.992</td>\n      <td>157.302</td>\n      <td>74.997</td>\n      <td>0.00784</td>\n      <td>0.00007</td>\n      <td>0.00370</td>\n      <td>0.00554</td>\n      <td>0.01109</td>\n      <td>0.04374</td>\n      <td>0.426</td>\n      <td>...</td>\n      <td>0.02971</td>\n      <td>0.06545</td>\n      <td>0.02211</td>\n      <td>21.033</td>\n      <td>0.414783</td>\n      <td>0.815285</td>\n      <td>-4.813031</td>\n      <td>0.266482</td>\n      <td>2.301442</td>\n      <td>0.284654</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>122.400</td>\n      <td>148.650</td>\n      <td>113.819</td>\n      <td>0.00968</td>\n      <td>0.00008</td>\n      <td>0.00465</td>\n      <td>0.00696</td>\n      <td>0.01394</td>\n      <td>0.06134</td>\n      <td>0.626</td>\n      <td>...</td>\n      <td>0.04368</td>\n      <td>0.09403</td>\n      <td>0.01929</td>\n      <td>19.085</td>\n      <td>0.458359</td>\n      <td>0.819521</td>\n      <td>-4.075192</td>\n      <td>0.335590</td>\n      <td>2.486855</td>\n      <td>0.368674</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>116.682</td>\n      <td>131.111</td>\n      <td>111.555</td>\n      <td>0.01050</td>\n      <td>0.00009</td>\n      <td>0.00544</td>\n      <td>0.00781</td>\n      <td>0.01633</td>\n      <td>0.05233</td>\n      <td>0.482</td>\n      <td>...</td>\n      <td>0.03590</td>\n      <td>0.08270</td>\n      <td>0.01309</td>\n      <td>20.651</td>\n      <td>0.429895</td>\n      <td>0.825288</td>\n      <td>-4.443179</td>\n      <td>0.311173</td>\n      <td>2.342259</td>\n      <td>0.332634</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>116.676</td>\n      <td>137.871</td>\n      <td>111.366</td>\n      <td>0.00997</td>\n      <td>0.00009</td>\n      <td>0.00502</td>\n      <td>0.00698</td>\n      <td>0.01505</td>\n      <td>0.05492</td>\n      <td>0.517</td>\n      <td>...</td>\n      <td>0.03772</td>\n      <td>0.08771</td>\n      <td>0.01353</td>\n      <td>20.644</td>\n      <td>0.434969</td>\n      <td>0.819235</td>\n      <td>-4.117501</td>\n      <td>0.334147</td>\n      <td>2.405554</td>\n      <td>0.368975</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>116.014</td>\n      <td>141.781</td>\n      <td>110.655</td>\n      <td>0.01284</td>\n      <td>0.00011</td>\n      <td>0.00655</td>\n      <td>0.00908</td>\n      <td>0.01966</td>\n      <td>0.06425</td>\n      <td>0.584</td>\n      <td>...</td>\n      <td>0.04465</td>\n      <td>0.10470</td>\n      <td>0.01767</td>\n      <td>19.649</td>\n      <td>0.417356</td>\n      <td>0.823484</td>\n      <td>-3.747787</td>\n      <td>0.234513</td>\n      <td>2.332180</td>\n      <td>0.410335</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>190</th>\n      <td>174.188</td>\n      <td>230.978</td>\n      <td>94.261</td>\n      <td>0.00459</td>\n      <td>0.00003</td>\n      <td>0.00263</td>\n      <td>0.00259</td>\n      <td>0.00790</td>\n      <td>0.04087</td>\n      <td>0.405</td>\n      <td>...</td>\n      <td>0.02745</td>\n      <td>0.07008</td>\n      <td>0.02764</td>\n      <td>19.517</td>\n      <td>0.448439</td>\n      <td>0.657899</td>\n      <td>-6.538586</td>\n      <td>0.121952</td>\n      <td>2.657476</td>\n      <td>0.133050</td>\n    </tr>\n    <tr>\n      <th>191</th>\n      <td>209.516</td>\n      <td>253.017</td>\n      <td>89.488</td>\n      <td>0.00564</td>\n      <td>0.00003</td>\n      <td>0.00331</td>\n      <td>0.00292</td>\n      <td>0.00994</td>\n      <td>0.02751</td>\n      <td>0.263</td>\n      <td>...</td>\n      <td>0.01879</td>\n      <td>0.04812</td>\n      <td>0.01810</td>\n      <td>19.147</td>\n      <td>0.431674</td>\n      <td>0.683244</td>\n      <td>-6.195325</td>\n      <td>0.129303</td>\n      <td>2.784312</td>\n      <td>0.168895</td>\n    </tr>\n    <tr>\n      <th>192</th>\n      <td>174.688</td>\n      <td>240.005</td>\n      <td>74.287</td>\n      <td>0.01360</td>\n      <td>0.00008</td>\n      <td>0.00624</td>\n      <td>0.00564</td>\n      <td>0.01873</td>\n      <td>0.02308</td>\n      <td>0.256</td>\n      <td>...</td>\n      <td>0.01667</td>\n      <td>0.03804</td>\n      <td>0.10715</td>\n      <td>17.883</td>\n      <td>0.407567</td>\n      <td>0.655683</td>\n      <td>-6.787197</td>\n      <td>0.158453</td>\n      <td>2.679772</td>\n      <td>0.131728</td>\n    </tr>\n    <tr>\n      <th>193</th>\n      <td>198.764</td>\n      <td>396.961</td>\n      <td>74.904</td>\n      <td>0.00740</td>\n      <td>0.00004</td>\n      <td>0.00370</td>\n      <td>0.00390</td>\n      <td>0.01109</td>\n      <td>0.02296</td>\n      <td>0.241</td>\n      <td>...</td>\n      <td>0.01588</td>\n      <td>0.03794</td>\n      <td>0.07223</td>\n      <td>19.020</td>\n      <td>0.451221</td>\n      <td>0.643956</td>\n      <td>-6.744577</td>\n      <td>0.207454</td>\n      <td>2.138608</td>\n      <td>0.123306</td>\n    </tr>\n    <tr>\n      <th>194</th>\n      <td>214.289</td>\n      <td>260.277</td>\n      <td>77.973</td>\n      <td>0.00567</td>\n      <td>0.00003</td>\n      <td>0.00295</td>\n      <td>0.00317</td>\n      <td>0.00885</td>\n      <td>0.01884</td>\n      <td>0.190</td>\n      <td>...</td>\n      <td>0.01373</td>\n      <td>0.03078</td>\n      <td>0.04398</td>\n      <td>21.209</td>\n      <td>0.462803</td>\n      <td>0.664357</td>\n      <td>-5.724056</td>\n      <td>0.190667</td>\n      <td>2.555477</td>\n      <td>0.148569</td>\n    </tr>\n  </tbody>\n</table>\n<p>195 rows × 22 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"y","metadata":{"execution":{"iopub.status.busy":"2024-07-23T06:52:10.52504Z","iopub.execute_input":"2024-07-23T06:52:10.525566Z","iopub.status.idle":"2024-07-23T06:52:10.536864Z","shell.execute_reply.started":"2024-07-23T06:52:10.525528Z","shell.execute_reply":"2024-07-23T06:52:10.53533Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"0      1\n1      1\n2      1\n3      1\n4      1\n      ..\n190    0\n191    0\n192    0\n193    0\n194    0\nName: status, Length: 195, dtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"### Data Standardization","metadata":{}},{"cell_type":"code","source":"scaler = StandardScaler()\nscaler.fit(X)\nstandardized_data = scaler.transform(X)\nX = standardized_data","metadata":{"execution":{"iopub.status.busy":"2024-07-23T06:53:09.617999Z","iopub.execute_input":"2024-07-23T06:53:09.618513Z","iopub.status.idle":"2024-07-23T06:53:09.6319Z","shell.execute_reply.started":"2024-07-23T06:53:09.618473Z","shell.execute_reply":"2024-07-23T06:53:09.629878Z"},"trusted":true},"execution_count":13,"outputs":[]},{"cell_type":"markdown","source":"## Train-Test Split","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, stratify=y, random_state=45)","metadata":{"execution":{"iopub.status.busy":"2024-07-23T06:53:34.717613Z","iopub.execute_input":"2024-07-23T06:53:34.718132Z","iopub.status.idle":"2024-07-23T06:53:34.731938Z","shell.execute_reply.started":"2024-07-23T06:53:34.718091Z","shell.execute_reply":"2024-07-23T06:53:34.73043Z"},"trusted":true},"execution_count":14,"outputs":[]},{"cell_type":"code","source":"print(\"X: \", X.shape, X_train.shape, X_test.shape)\nprint(\"y: \", y.shape, y_train.shape, y_test.shape)","metadata":{"execution":{"iopub.status.busy":"2024-07-23T06:54:20.383992Z","iopub.execute_input":"2024-07-23T06:54:20.385617Z","iopub.status.idle":"2024-07-23T06:54:20.392717Z","shell.execute_reply.started":"2024-07-23T06:54:20.385554Z","shell.execute_reply":"2024-07-23T06:54:20.391194Z"},"trusted":true},"execution_count":17,"outputs":[{"name":"stdout","text":"X:  (195, 22) (156, 22) (39, 22)\ny:  (195,) (156,) (39,)\n","output_type":"stream"}]},{"cell_type":"markdown","source":"Evaluate the performance of different regression models on the given dataset:","metadata":{}},{"cell_type":"code","source":"models = [LogisticRegression, SVC, DecisionTreeClassifier, RandomForestClassifier]\naccuracy_scores = []\nprecision_scores = []\nrecall_scores = []\nf1_scores = []\n\n#iterate through each model to find the best one\nfor model in models:\n    classifier = model().fit(X_train, y_train)\n    y_pred = classifier.predict(X_test)\n    \n    accuracy_scores.append(accuracy_score(y_test, y_pred))\n    precision_scores.append(precision_score(y_test, y_pred))\n    recall_scores.append(recall_score(y_test, y_pred))\n    f1_scores.append(f1_score(y_test, y_pred))","metadata":{"execution":{"iopub.status.busy":"2024-07-23T06:56:51.970074Z","iopub.execute_input":"2024-07-23T06:56:51.971589Z","iopub.status.idle":"2024-07-23T06:56:52.29556Z","shell.execute_reply.started":"2024-07-23T06:56:51.97154Z","shell.execute_reply":"2024-07-23T06:56:52.294092Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"code","source":"metrics_df = pd.DataFrame({\n    \"Model\": [\"Logistic Regression\", \"SVM\", \"Decision Tree\", \"Random Forest\"],\n    \"Accuracy\": accuracy_scores,\n    \"Precision\": precision_scores,\n    \"Recall\": recall_scores,\n    \"F1 Score\": f1_scores\n}) \nmetrics_df.set_index('Model', inplace=True)\nmetrics_df\n","metadata":{"execution":{"iopub.status.busy":"2024-07-23T06:57:58.474053Z","iopub.execute_input":"2024-07-23T06:57:58.475194Z","iopub.status.idle":"2024-07-23T06:57:58.497293Z","shell.execute_reply.started":"2024-07-23T06:57:58.475145Z","shell.execute_reply":"2024-07-23T06:57:58.495802Z"},"trusted":true},"execution_count":21,"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"                     Accuracy  Precision    Recall  F1 Score\nModel                                                       \nLogistic Regression  0.871795   0.852941  1.000000  0.920635\nSVM                  0.871795   0.852941  1.000000  0.920635\nDecision Tree        0.871795   0.875000  0.965517  0.918033\nRandom Forest        0.923077   0.933333  0.965517  0.949153","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Accuracy</th>\n      <th>Precision</th>\n      <th>Recall</th>\n      <th>F1 Score</th>\n    </tr>\n    <tr>\n      <th>Model</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Logistic Regression</th>\n      <td>0.871795</td>\n      <td>0.852941</td>\n      <td>1.000000</td>\n      <td>0.920635</td>\n    </tr>\n    <tr>\n      <th>SVM</th>\n      <td>0.871795</td>\n      <td>0.852941</td>\n      <td>1.000000</td>\n      <td>0.920635</td>\n    </tr>\n    <tr>\n      <th>Decision Tree</th>\n      <td>0.871795</td>\n      <td>0.875000</td>\n      <td>0.965517</td>\n      <td>0.918033</td>\n    </tr>\n    <tr>\n      <th>Random Forest</th>\n      <td>0.923077</td>\n      <td>0.933333</td>\n      <td>0.965517</td>\n      <td>0.949153</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"The **Random Forest Model** is the best model to use in this scenario as it has the best accuracy, precision and F1 score. ","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}